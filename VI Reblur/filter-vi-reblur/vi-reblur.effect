//By Jademalo, using code from Xaymar
//tex2D has been replaced by image.sample

// Basic Input Parameters
uniform float4x4 ViewProj; // View Projection Matrix
uniform texture2d image; // Input Image
uniform float2 Image_Texel;

// Custom Parameters
uniform bool offset;
uniform int width;


sampler_state sample_point {
	Filter   = Point;
	AddressU = Clamp;
	AddressV = Clamp;
};

struct VertDataIn {
	float4 pos : POSITION;
	float2 uv  : TEXCOORD0;
};

struct VertDataOut {
	float4 pos : POSITION;
	float2 uv  : TEXCOORD0;
};

VertDataOut VSDefault(VertDataIn v_in) {
	VertDataOut vert_out;
	vert_out.pos = mul(float4(v_in.pos.xyz, 1.0), ViewProj);
	vert_out.uv  = v_in.uv;

	return vert_out;
}


// ************************************************************************** //
// VI Reblur
// ************************************************************************** //

float4 PS_VIBlur(VertDataOut v_in) : TARGET {

	float4 blendA = image.Sample(sample_point, v_in.uv);                        //Blend A is every pixel
	float4 blendB = image.Sample(sample_point, v_in.uv, int2(1, 0));            //Blend B is every pixel, offset by 1

	return lerp(blendA, blendB, 0.5);                                           //This blends both together with a 50% intensity

}


technique Draw
{
	pass
	{
		vertex_shader = VSDefault(v_in);
		pixel_shader  = PS_VIBlur(v_in);
	}
}
